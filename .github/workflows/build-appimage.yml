name: Build AppImage

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-appimage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          meson \
          ninja-build \
          pkg-config \
          libgtk-4-dev \
          libadwaita-1-dev \
          glib-networking \
          gsettings-desktop-schemas \
          desktop-file-utils \
          appstream-util \
          gettext
          
    - name: Build with Meson
      run: |
        meson setup builddir --prefix=/usr --buildtype=release
        meson compile -C builddir
        
    - name: Install to AppDir
      run: |
        DESTDIR="$PWD/AppDir" meson install -C builddir
        
    - name: Compile GSettings schemas
      run: |
        glib-compile-schemas AppDir/usr/share/glib-2.0/schemas/
        
    - name: Create AppRun script
      run: |
        cat > AppDir/AppRun << 'EOF'
        #!/usr/bin/env bash
        HERE="$(dirname "$(readlink -f "$0")")"
        export APPDIR="$HERE"
        export GSETTINGS_SCHEMA_DIR="$HERE/usr/share/glib-2.0/schemas"
        export XDG_DATA_DIRS="$HERE/usr/share:/usr/local/share:/usr/share"
        export LD_LIBRARY_PATH="$HERE/usr/lib:$LD_LIBRARY_PATH"
        exec "$HERE/usr/bin/wally" "$@"
        EOF
        chmod +x AppDir/AppRun
        
    - name: Copy desktop file and icon to AppDir root
      run: |
        cp AppDir/usr/share/applications/com.qomarhsn.wally.desktop AppDir/
        cp AppDir/usr/share/icons/hicolor/scalable/apps/com.qomarhsn.wally.svg AppDir/
        
    - name: Download appimagetool
      run: |
        wget -N https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        
    - name: Build AppImage
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        ARCH=x86_64 ./appimagetool-x86_64.AppImage --appimage-extract-and-run AppDir Wally-${VERSION}-x86_64.AppImage
        
    - name: Generate Changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -v "^${{ github.ref_name }}$" | head -n 1)
        
        # Generate changelog with commit messages
        CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..${{ github.ref_name }})
        
        # Save changelog to output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Wally ${{ github.ref_name }}"
        files: |
          Wally-*.AppImage
        body: |
          ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
